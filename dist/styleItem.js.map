{"version":3,"sources":["../source/styleItem.js"],"names":["_styles","replacedStyle","styleCSS","colors","options","caching","wrapStyles","styleName","styleFn","cached","key","value","source","args","elemName","Array","isArray","hasOwnProperty","inlineStyle","baseStyle","base","propN","includes","match","RegExp","css","style","randomClassName","global","__TEST__","publish","styleStuff","JSON","stringify","Object","keys","length","assign"],"mappings":"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","file":"styleItem.js","sourcesContent":["\nimport { hasKids, specialCharacters, specialInnerCharacters, separateCssStyle, makeid, genCss, genStyles, classes } from './utils'\nimport element from './element'\n\nexport default function({_styles,replacedStyle,styleCSS, colors, options,caching, wrapStyles}){\n\n    return (styleName)=>{\n\n      const styleFn = _styles[styleName]||(()=>{});\n\n      const cached = { key:null, value:null, source:[] }\n      replacedStyle[styleName] = function(...args) {\n        let elemName = args[0];\n        if(Array.isArray(elemName) && elemName.hasOwnProperty(\"raw\")){\n\n          elemName = elemName[0] || args[1];\n          let inlineStyle = null;//replacedStyle[styleName]();\n\n          const baseStyle = styleCSS[styleName] && styleCSS[styleName].base || {}\n          for(const propN in styleCSS[styleName]){\n            if(specialCharacters.includes(propN[0]) || !!propN.match(new RegExp(`[${specialInnerCharacters}]`, \"gi\"))){\n              baseStyle[propN] = styleCSS[styleName][propN]\n            }\n          }\n          //splict \":\" and \"@\" from all over styles\n          const { css, style } = separateCssStyle(baseStyle);\n          /*\n          const cssPropNames = Object.keys(styleCSS[styleName])\n                                     .filter(stylePropName => stylePropName[0] === \"@\" ||  stylePropName[0] === \":\");\n          */\n          let randomClassName = \"\";\n\n          //if(0 < cssPropNames.length){\n          if(css){\n\n            randomClassName = \"react-outline-\"\n\n            if(!global.__TEST__)\n                randomClassName += makeid();\n\n          classes.publish(randomClassName,genCss({randomClassName, css,styleCSS, colors,style,styleName}))\n\n           inlineStyle = {};\n          }\n\n          return element({elemName, css,styleCSS,inlineStyle,style,styleName, colors, randomClassName, options,randomClassName,replacedStyle})\n\n        } // elem gen\n\n        const styleStuff = { styleCSS:styleCSS[styleName],styleFn/*,radium*/ };\n\n        if(!caching){\n          return genStyles(styleStuff,args,colors);\n        }\n        // quick test\n        if(cached.value && cached.source[0] === args[0] && cached.source[0] === args[1]){\n          return cached.value;\n        }\n        // deep test\n        const key = \"\"+JSON.stringify(args[0])+JSON.stringify(args[1])\n        if(key === cached.key){\n          return cached.value;\n        }\n\n        cached.key = key;\n        cached.source[0] = args[0];\n        cached.source[1] = args[1];\n        cached.value = genStyles(styleStuff,args,colors);\n        return cached.value;\n    } // END replacedStyle[styleName] = function(...args)\n\n      if(0 < Object.keys(styleFn).length || hasKids(styleCSS[styleName])){\n        Object.assign(replacedStyle[styleName], wrapStyles(styleFn,options,styleCSS[styleName]))\n      }\n    }\n}\n"]}