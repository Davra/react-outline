{"version":3,"sources":["../source/utils.js"],"names":["separateCssStyle","makeid","genStyles","genCss","hasKids","specialCharacters","specialInnerCharacters","styles","css","style","name","includes","Object","keys","length","object2css","colors","obj","replaceColors","i","len","result","key","val","prefixer","classes","vals","subscribers","publish","value","forEach","subscriber","subscribe","push","get","clear","getOwnPropertyNames","className","possible","side","text","charAt","Math","random","replacedStyleFn","args","styleCSS","styleFn","processedStyles","styleAsPropObj","styleBase","assign","base","autoAddStyles","firstVal","cssName","styleStuff","userResult","swapedColor","prefix","a","randomClassName","styleName","newStyle","reduce","cssString","propName","styleContent"],"mappings":"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","file":"utils.js","sourcesContent":["import Prefixer from 'inline-style-prefixer'\nimport hyphenate from 'hyphenate-style-name'\nimport addPx from 'add-px-to-style'\n\nconst specialCharacters = \"@: \";//['@',':'].join(\"\");\nconst specialInnerCharacters = \" >+~\";//['@',':'].join(\"\");\n\nexport function separateCssStyle(styles){\n\n  let css = {}\n  let style = {}\n\n  for(const name in styles){\n    if(specialCharacters.includes(name[0]) )//|| !!name.match(new RegExp(`[${specialInnerCharacters}]`, \"gi\")))\n        css[name] = styles[name]\n    else\n        style[name] = styles[name]\n  }\n\n  if( 0 === Object.keys(css).length)\n  css = null;\n\n  if( 0 === Object.keys(style).length)\n  style = null;\n\n  return { css, style }\n}\n\n// Convert a JS object to CSS string. Similar to React's output of CSS, extracted into a module.\nfunction object2css(colors,obj) {\n  obj = replaceColors(colors,obj);\n  let keys = Object.keys(obj)\n  //if (!keys.length) return ''\n  let i, len = keys.length\n  let result = ''\n\n  for (i = 0; i < len; i++) {\n    let key = keys[i]\n    let val = obj[key]\n    result += hyphenate(key) + ':' + addPx(key, val) +\"; \"\n  }\n  return result\n}\n\nconst prefixer = new Prefixer();\n\nconst classes = new function(){\n\n  const vals = {};\n  const subscribers = [];\n\n  this.publish = function(key,value){\n\n    vals[key] = value;\n    subscribers.forEach( subscriber => subscriber(vals) )\n  }\n\n  this.subscribe = (subscriber) =>  subscribers.push(subscriber);\n  this.get = () => vals;\n  this.clear = ()=> {for(const className of Object.getOwnPropertyNames(vals)){ delete vals[className] }}\n}()\n\n\nconst possible = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\nexport function makeid(side = 10) {\n  let text = \"\";\n\n  for (let i = 0; i < side; i++)\n    text += possible.charAt(~~(Math.random() * possible.length));\n\n  return text;\n}\n\nfunction replacedStyleFn({styleCSS,styleFn/*,radium*/},args){\n\n    const processedStyles = 1=== styleFn.length ? styleFn(args[0]) : styleFn(styleCSS,args[0]);\n\n    const styleAsPropObj = 0===styleFn.length && \"object\" === typeof args[0] ? args[0] : {};\n    const styleBase = Object.assign({},styleCSS && styleCSS.base||styleCSS||{},styleAsPropObj)\n/*\n    for(const stylePropName in styleBase){\n      if(specialCharacters.includes(stylePropName[0]))\n      delete styleBase[stylePropName];\n    }\n*/\n    const autoAddStyles = [], firstVal = args[1]// || args[0];\n    //console.log(args)\n    if(!!firstVal && \"object\" === typeof firstVal){\n        Object.keys(firstVal)\n              .forEach( cssName => {\n          if(true === firstVal[cssName] && styleCSS && cssName in styleCSS)\n            autoAddStyles.push(styleCSS[cssName])\n        //  else // to bind style value to output obj\n        //    autoAddStyles.push({cssName:firstVal[cssName]})\n        });\n    }\n\n    return Object.assign({},styleBase,...autoAddStyles,processedStyles);\n}\n\n\nconst replaceColors = (colors,style) =>{\n\n  if(!colors) return style;\n  const result = Object.assign({},style)\n  for(const key in result ){\n    if(result[key] in colors){\n      result[key] = colors[result[key]];\n    }\n  }\n  return result;\n}\n\nexport function genStyles(styleStuff, args,colors){\n  const userResult = replacedStyleFn(styleStuff,args);\n\n  const swapedColor = replaceColors(colors,userResult);\n  for(const name in swapedColor){\n    if(!specialCharacters.includes(name[0]))\n    swapedColor[name] = prefixer.prefix({a:swapedColor[name]}).a;\n  }\n\n\n  return swapedColor;\n}\n\nexport function genCss({randomClassName, css,styleCSS, colors,style,styleName}){\n\n  let newStyle = (style)?`.${randomClassName}{${ object2css(colors,style) }}`:\"\"\n\n  newStyle = Object.keys(css).reduce( (cssString,propName) => {\n    const styleContent = object2css(colors,css[propName] || styleCSS[styleName].base && styleCSS[styleName].base[propName] || styleCSS[styleName][propName]);\n    if(propName[0] === \"@\")\n        return cssString + ` ${propName}{ .${randomClassName}{ ${ styleContent } } } `\n    else if(propName[0] === \":\")\n        return ` .${randomClassName}${propName}{ ${ styleContent } } ` + cssString\n    else\n        return ` .${randomClassName} ${propName}{ ${ styleContent } } ` + cssString\n  //  else // skip unknown prop\n  //      return cssString\n  } ,newStyle )\n\n  return newStyle;\n}\n\nexport function hasKids(obj){\n  for(const name in obj){\n    if(\"base\" !== name && \"object\" === typeof obj[name])\n    return true\n  }\n}\n\nexport { classes, specialCharacters, specialInnerCharacters }\n"]}