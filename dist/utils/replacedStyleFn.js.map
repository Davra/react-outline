{"version":3,"sources":["../../source/utils/replacedStyleFn.js"],"names":["replacedStyleFn","args","styleCSS","styleFn","processedStyles","length","styleAsPropObj","styleBase","Object","assign","base","autoAddStyles","firstVal","keys","forEach","cssName","push"],"mappings":";;;;;;;;kBACwBA,e;AAAT,SAASA,eAAT,OAAuDC,IAAvD,EAA4D;AAAA,QAAlCC,QAAkC,QAAlCA,QAAkC;AAAA,QAAzBC,OAAyB,QAAzBA,OAAyB;;;AAEvE,QAAMC,kBAAkB,MAAKD,QAAQE,MAAb,GAAsBF,QAAQF,KAAK,CAAL,CAAR,CAAtB,GAAyCE,QAAQD,QAAR,EAAiBD,KAAK,CAAL,CAAjB,CAAjE;;AAEA,QAAMK,iBAAiB,MAAIH,QAAQE,MAAZ,IAAsB,qBAAoBJ,KAAK,CAAL,CAApB,CAAtB,GAAoDA,KAAK,CAAL,CAApD,GAA8D,EAArF;AACA,QAAMM,YAAYC,OAAOC,MAAP,CAAc,EAAd,EAAiBP,YAAYA,SAASQ,IAArB,IAA2BR,QAA3B,IAAqC,EAAtD,EAAyDI,cAAzD,CAAlB;AACJ;;;;;;AAMI,QAAMK,gBAAgB,EAAtB;AAAA,QAA0BC,WAAWX,KAAK,CAAL,CAArC,CAZuE,CAY3B;AAC5C;AACA,QAAG,CAAC,CAACW,QAAF,IAAc,qBAAoBA,QAApB,yCAAoBA,QAApB,EAAjB,EAA8C;AAC1CJ,eAAOK,IAAP,CAAYD,QAAZ,EACOE,OADP,CACgB,mBAAW;AACzB,gBAAG,SAASF,SAASG,OAAT,CAAT,IAA8Bb,QAA9B,IAA0Ca,WAAWb,QAAxD,EACES,cAAcK,IAAd,CAAmBd,SAASa,OAAT,CAAnB;AACJ;AACA;AACC,SAND;AAOH;;AAED,WAAOP,OAAOC,MAAP,gBAAc,EAAd,EAAiBF,SAAjB,SAA8BI,aAA9B,GAA4CP,eAA5C,GAAP;AACH","file":"replacedStyleFn.js","sourcesContent":["\nexport default function replacedStyleFn({styleCSS,styleFn/*,radium*/},args){\n\n    const processedStyles = 1=== styleFn.length ? styleFn(args[0]) : styleFn(styleCSS,args[0]);\n\n    const styleAsPropObj = 0===styleFn.length && \"object\" === typeof args[0] ? args[0] : {};\n    const styleBase = Object.assign({},styleCSS && styleCSS.base||styleCSS||{},styleAsPropObj)\n/*\n    for(const stylePropName in styleBase){\n      if(specialCharacters.includes(stylePropName[0]))\n      delete styleBase[stylePropName];\n    }\n*/\n    const autoAddStyles = [], firstVal = args[1]// || args[0];\n    //console.log(args)\n    if(!!firstVal && \"object\" === typeof firstVal){\n        Object.keys(firstVal)\n              .forEach( cssName => {\n          if(true === firstVal[cssName] && styleCSS && cssName in styleCSS)\n            autoAddStyles.push(styleCSS[cssName])\n        //  else // to bind style value to output obj\n        //    autoAddStyles.push({cssName:firstVal[cssName]})\n        });\n    }\n\n    return Object.assign({},styleBase,...autoAddStyles,processedStyles);\n}\n"]}