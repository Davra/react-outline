{"version":3,"sources":["../../source/utils/separateCssStyle.js"],"names":["separateCssStyle","styles","css","style","name","includes","Object","keys","length"],"mappings":";;;;;QAGgBA,gB,GAAAA,gB;;AAFhB;;AAEO,SAASA,gBAAT,CAA0BC,MAA1B,EAAiC;;AAEtC,MAAIC,MAAM,EAAV;AACA,MAAIC,QAAQ,EAAZ;;AAEA,OAAI,IAAMC,IAAV,IAAkBH,MAAlB,EAAyB;AACvB,QAAG,yBAAkBI,QAAlB,CAA2BD,KAAK,CAAL,CAA3B,CAAH,EAAwC;AACpCF,UAAIE,IAAJ,IAAYH,OAAOG,IAAP,CAAZ,CADJ,KAGID,MAAMC,IAAN,IAAcH,OAAOG,IAAP,CAAd;AACL;;AAED,MAAI,MAAME,OAAOC,IAAP,CAAYL,GAAZ,EAAiBM,MAA3B,EACAN,MAAM,IAAN;;AAEA,MAAI,MAAMI,OAAOC,IAAP,CAAYJ,KAAZ,EAAmBK,MAA7B,EACAL,QAAQ,IAAR;;AAEA,SAAO,EAAED,QAAF,EAAOC,YAAP,EAAP;AACD","file":"separateCssStyle.js","sourcesContent":["\nimport { specialCharacters } from './index'\n\nexport function separateCssStyle(styles){\n\n  let css = {}\n  let style = {}\n\n  for(const name in styles){\n    if(specialCharacters.includes(name[0]) )//|| !!name.match(new RegExp(`[${specialInnerCharacters}]`, \"gi\")))\n        css[name] = styles[name]\n    else\n        style[name] = styles[name]\n  }\n\n  if( 0 === Object.keys(css).length)\n  css = null;\n\n  if( 0 === Object.keys(style).length)\n  style = null;\n\n  return { css, style }\n}\n"]}