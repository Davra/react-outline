{"version":3,"sources":["../../source/utils/genStyles.js"],"names":["genStyles","prefixer","styleStuff","args","colors","userResult","swapedColor","name","includes","prefix","a"],"mappings":";;;;;kBAQwBA,S;;AARxB;;;;AAEA;;;;AACA;;;;AACA;;;;AAEA,IAAMC,WAAW,mCAAjB;;AAEe,SAASD,SAAT,CAAmBE,UAAnB,EAA+BC,IAA/B,EAAoCC,MAApC,EAA2C;AACxD,MAAMC,aAAa,+BAAgBH,UAAhB,EAA2BC,IAA3B,CAAnB;;AAEA,MAAMG,cAAc,6BAAcF,MAAd,EAAqBC,UAArB,CAApB;AACA,OAAI,IAAME,IAAV,IAAkBD,WAAlB,EAA8B;AAC5B,QAAG,CAAC,yBAAkBE,QAAlB,CAA2BD,KAAK,CAAL,CAA3B,CAAJ,EACAD,YAAYC,IAAZ,IAAoBN,SAASQ,MAAT,CAAgB,EAACC,GAAEJ,YAAYC,IAAZ,CAAH,EAAhB,EAAuCG,CAA3D;AACD;;AAED,SAAOJ,WAAP;AACD","file":"genStyles.js","sourcesContent":["import Prefixer from 'inline-style-prefixer'\n\nimport replacedStyleFn from './replacedStyleFn'\nimport replaceColors from './replaceColors'\nimport {specialCharacters} from './index'\n\nconst prefixer = new Prefixer();\n\nexport default function genStyles(styleStuff, args,colors){\n  const userResult = replacedStyleFn(styleStuff,args);\n\n  const swapedColor = replaceColors(colors,userResult);\n  for(const name in swapedColor){\n    if(!specialCharacters.includes(name[0]))\n    swapedColor[name] = prefixer.prefix({a:swapedColor[name]}).a;\n  }\n\n  return swapedColor;\n}\n"]}